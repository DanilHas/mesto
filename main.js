(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,r(o.key),o)}}function r(e){var r=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(r)?r:String(r)}const n=function(){function t(e,n){var o,i,u,a=this,c=e.data,l=e.handleCardClick,s=e.handleDeleteIconClick,f=e.handleLikeCard;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,u=function(){a._element.remove(),a._element=null},(i=r(i="deleteCard"))in o?Object.defineProperty(o,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):o[i]=u,this._item=c.item,this._name=this._item.name,this._link=this._item.link,this._likes=this._item.likes,this._userId=c.userId,this._ownerId=c.ownerId,this._templateSelector=n,this._handleCardClick=l,this._handleDeleteIconClick=s,this._handleLikeCard=f}var n,o;return n=t,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"activateLikeButton",value:function(){this._cardLikeButton.classList.add("card__like-button_active")}},{key:"deactivateLikeButton",value:function(){this._cardLikeButton.classList.remove("card__like-button_active")}},{key:"changeLikeCounter",value:function(t){this._likeCounter.textContent=t.length}},{key:"isLiked",value:function(t){var e=this;return t.find((function(t){return t._id===e._userId}))}},{key:"_setEventListeners",value:function(){var t=this;this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardLikeButton.addEventListener("click",(function(){return t._handleLikeCard(t._item._id)})),this._cardDeleteButton.addEventListener("click",(function(){return t._handleDeleteIconClick(t,t._item._id)})),this._cardImage.addEventListener("click",this._handleCardClick.bind(this))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._likeCounter=this._element.querySelector(".card__like-counter"),this._setEventListeners(),this.changeLikeCounter(this._likes),this.isLiked(this._likes)?this.activateLikeButton():this.deactivateLikeButton(),this._ownerId!==this._userId&&(this._cardDeleteButton.remove(),this._cardDeleteButton=null),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._element}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}var u=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=r,this._inputList=Array.from(this._formElement.querySelectorAll(e.inputSelector)),this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._submitButton=this._formElement.querySelector(e.submitButtonSelector),this._inactiveButtonClass=e.inactiveButtonClass}var e,r;return e=t,(r=[{key:"_setEventListeners",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkValidity(e),t._toggleButtonState()}))})),this._formElement.addEventListener("submit",(function(t){t.preventDefault()}))}},{key:"_checkValidity",value:function(t){t.validity.valid?this.hideErrorMessage(t):this._showErrorMessage(t)}},{key:"_showErrorMessage",value:function(t){t.classList.add(this._inputErrorClass);var e=this._formElement.querySelector(".".concat(t.id,"-error"));e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"hideErrorMessage",value:function(t){t.classList.remove(this._inputErrorClass);var e=this._formElement.querySelector(".".concat(t.id,"-error"));e.classList.remove(this._errorClass),e.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_disableButton",value:function(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}},{key:"_enableButton",value:function(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"resetValidation",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){t.hideErrorMessage(e)}))}},{key:"enableValidation",value:function(){this._disableButton(),this._setEventListeners()}}])&&i(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();const a={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_visible"};function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===c(o)?o:String(o)),n)}var o}var s=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=n,this._container=document.querySelector(r),this._renderer=o}var e,r;return e=t,(r=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItems",value:function(){var t=this;this._renderedItems.forEach((function(e){t._renderer(e)}))}}])&&l(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===f(o)?o:String(o)),n)}var o}var y=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupSelector=e,this._popup=document.querySelector(this._popupSelector),this._handleEscClose=this._handleEscClose.bind(this)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target.classList.contains("popup_opened")&&t.close(),e.target.classList.contains("popup__close-button")&&t.close()}))}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function h(t){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h(t)}function d(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==h(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==h(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===h(o)?o:String(o)),n)}var o}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=b(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},m.apply(this,arguments)}function v(t,e){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},v(t,e)}function b(t){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},b(t)}var _=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&v(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=b(n);if(o){var r=b(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===h(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e,r=t.popupSelector,n=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,r))._formElement=e._popup.querySelector(".form"),e._formSubmitButton=e._formElement.querySelector(".popup__submit-button"),e._submitButtonText=e._formSubmitButton.textContent,e._handleFormSubmit=n,e._inputList=e._formElement.querySelectorAll(".form__input"),e}return e=u,(r=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setInputValues",value:function(t){this._inputList.forEach((function(e){e.value=t[e.name]}))}},{key:"close",value:function(){m(b(u.prototype),"close",this).call(this),this._formElement.reset()}},{key:"renderLoading",value:function(t){this._formSubmitButton.textContent=t?"Сохранение...":this._submitButtonText}},{key:"setEventListeners",value:function(){var t=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault(),t.renderLoading(!0),t._handleFormSubmit(t._getInputValues())})),m(b(u.prototype),"setEventListeners",this).call(this)}}])&&d(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(y);function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function g(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==S(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===S(o)?o:String(o)),n)}var o}var k=function(){function t(e){var r=e.nameElementSelector,n=e.jobElementSelector,o=e.avatarElementSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(r),this._jobElement=document.querySelector(n),this._avatarElement=document.querySelector(o)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return this._userInfo={username:this._nameElement.textContent,"user-info":this._jobElement.textContent},this._userInfo}},{key:"setUserAvatar",value:function(t){this._avatarElement.src=t.avatar}},{key:"setUserInfo",value:function(t){this._nameElement.textContent=t.name,this._jobElement.textContent=t.about,this.setUserAvatar(t)}}])&&g(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function E(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===w(o)?o:String(o)),n)}var o}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=P(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},C.apply(this,arguments)}function j(t,e){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},j(t,e)}function P(t){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},P(t)}var L=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&j(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=P(n);if(o){var r=P(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===w(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupCardImage=e._popup.querySelector(".popup__image"),e._popupImageCaption=e._popup.querySelector(".popup__image-caption"),e}return e=u,(r=[{key:"open",value:function(t){this._popupCardImage.src=t.link,this._popupCardImage.alt=t.name,this._popupImageCaption.textContent=t.name,C(P(u.prototype),"open",this).call(this)}}])&&E(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(y),O=document.querySelector(".profile__edit-button"),I=document.querySelector(".profile__add-button"),B=document.querySelector(".profile__avatar-button");function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function T(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===R(o)?o:String(o)),n)}var o}var q=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){var t=fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(t)}},{key:"getInitialCards",value:function(){var t=fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(t)}},{key:"_returnPromiseResult",value:function(t){return t.then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"renderInitialData",value:function(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}},{key:"editUserInfo",value:function(t){var e=fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.username,about:t["user-info"]})});return this._returnPromiseResult(e)}},{key:"addNewCard",value:function(t){var e=fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})});return this._returnPromiseResult(e)}},{key:"deleteCard",value:function(t){var e=fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(e)}},{key:"likeCard",value:function(t){var e=fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(e)}},{key:"deleteLike",value:function(t){var e=fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(e)}},{key:"changeAvatar",value:function(t){var e=fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})});return this._returnPromiseResult(e)}}])&&T(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function A(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==U(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==U(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===U(o)?o:String(o)),n)}var o}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=V(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},x.apply(this,arguments)}function D(t,e){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},D(t,e)}function V(t){return V=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},V(t)}var z=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&D(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=V(n);if(o){var r=V(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===U(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r,n=e.removeItem;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._confirmButton=r._popup.querySelector(".popup__submit-button"),r._removeItem=n,r}return e=u,(r=[{key:"setEventListeners",value:function(){var t=this;this._confirmButton.addEventListener("click",(function(){t._removeItem(t._card,t._cardId),x(V(u.prototype),"close",t).call(t)})),x(V(u.prototype),"setEventListeners",this).call(this)}},{key:"open",value:function(t,e){x(V(u.prototype),"open",this).call(this),this._card=t,this._cardId=e}}])&&A(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(y);function F(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var M=new q({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-66",headers:{authorization:"7465e869-899f-4ef6-ae51-f5f41eae39be","Content-Type":"application/json"}});M.renderInitialData().then((function(t){var e,r,o=(r=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,u,a=[],c=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(n=i.call(r)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,r)||function(t,e){if(t){if("string"==typeof t)return F(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?F(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1],c=new k({nameElementSelector:".profile__name",jobElementSelector:".profile__about-yourself",avatarElementSelector:".profile__avatar"});c.setUserInfo(i);var l=new L(".popup_type_upscaling"),f=new z(".popup_type_delete-card",{removeItem:function(t,e){M.deleteCard(e).then((function(){t.deleteCard()})).catch((function(t){return console.error(t)}))}}),p=function(t){var e=new n({data:{item:t,userId:i._id,ownerId:t.owner._id},handleCardClick:function(){l.open(t)},handleDeleteIconClick:function(t,e){f.open(t,e)},handleLikeCard:function(r){e.isLiked(t.likes)?M.deleteLike(r).then((function(r){return e.deactivateLikeButton(),e.changeLikeCounter(r.likes),t=r})).catch((function(t){return console.error(t)})):M.likeCard(r).then((function(r){return e.activateLikeButton(),e.changeLikeCounter(r.likes),t=r})).catch((function(t){return console.error(t)}))}},"#card-template");return e.generateCard()},y=new s({items:a.reverse(),renderer:function(t){var e=p(t);y.addItem(e)}},".cards__list"),h=new _({popupSelector:".popup_type_edit-profile",handleFormSubmit:function(t){M.editUserInfo(t).then((function(t){c.setUserInfo(t),h.close()})).catch((function(t){return console.error(t)})).finally((function(){h.renderLoading(!1)}))}}),d=new _({popupSelector:".popup_type_add-card",handleFormSubmit:function(t){M.addNewCard(t).then((function(t){var e=p(t);y.addItem(e),d.close()})).catch((function(t){return console.error(t)})).finally((function(){d.renderLoading(!1)}))}}),m=new _({popupSelector:".popup_type_change-avatar",handleFormSubmit:function(t){M.changeAvatar(t.avatar).then((function(t){c.setUserAvatar(t),m.close()})).catch((function(t){return console.error(t)})).finally((function(){m.renderLoading(!1)}))}}),v={};return{userInfo:c,popupProfile:h,popupCard:d,cardsList:y,popupCardImage:l,popupConfirmation:f,popupAvatar:m,enableValidation:function(t){Array.from(document.querySelectorAll(t.formSelector)).forEach((function(e){var r=new u(t,e),n=e.getAttribute("name");v[n]=r,r.enableValidation()}))},formValidators:v}})).then((function(t){var e=t.userInfo,r=t.popupProfile,n=t.popupCard,o=t.cardsList,i=t.popupCardImage,u=t.popupConfirmation,c=t.popupAvatar,l=t.enableValidation,s=t.formValidators;o.renderItems(),n.setEventListeners(),r.setEventListeners(),i.setEventListeners(),u.setEventListeners(),c.setEventListeners(),l(a),I.addEventListener("click",(function(){s.addCardForm.resetValidation(),n.open()})),O.addEventListener("click",(function(){var t=e.getUserInfo();r.setInputValues(t),s.editProfileForm.resetValidation(),r.open()})),B.addEventListener("click",(function(){s.changeAvatarForm.resetValidation(),c.open()}))})).catch((function(t){return console.error(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,