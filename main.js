(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,r(o.key),o)}}function r(e){var r=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===t(r)?r:String(r)}const n=function(){function t(e,n){var o,i,u,a=this,c=e.data,l=e.handleCardClick,s=e.handleDeleteIconClick,f=e.handleLikeCard;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,u=function(){a._element.remove(),a._element=null},(i=r(i="deleteCard"))in o?Object.defineProperty(o,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):o[i]=u,this._item=c.item,this._name=this._item.name,this._link=this._item.link,this._likes=this._item.likes,this._userId=c.userId,this._ownerId=c.ownerId,this._templateSelector=n,this._handleCardClick=l,this._handleDeleteIconClick=s,this._handleLikeCard=f}var n,o;return n=t,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"activateLikeButton",value:function(){this._cardLikeButton.classList.add("card__like-button_active")}},{key:"deactivateLikeButton",value:function(){this._cardLikeButton.classList.remove("card__like-button_active")}},{key:"changeLikeCounter",value:function(t){this._likeCounter.textContent=t.length}},{key:"isLiked",value:function(t){var e=this;return t.find((function(t){return t._id===e._userId}))}},{key:"_setEventListeners",value:function(){var t=this;this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardLikeButton.addEventListener("click",(function(){return t._handleLikeCard(t._item._id)})),this._cardDeleteButton.addEventListener("click",(function(){return t._handleDeleteIconClick(t,t._item._id)})),this._cardImage.addEventListener("click",this._handleCardClick.bind(this))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._likeCounter=this._element.querySelector(".card__like-counter"),this._setEventListeners(),this.changeLikeCounter(this._likes),this.isLiked(this._likes)?this.activateLikeButton():this.deactivateLikeButton(),this._ownerId!==this._userId&&(this._cardDeleteButton.remove(),this._cardDeleteButton=null),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._element}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===o(i)?i:String(i)),n)}var i}var u=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=r,this._inputList=Array.from(this._formElement.querySelectorAll(e.inputSelector)),this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._submitButton=this._formElement.querySelector(e.submitButtonSelector),this._inactiveButtonClass=e.inactiveButtonClass}var e,r;return e=t,(r=[{key:"_setEventListeners",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkValidity(e),t._toggleButtonState()}))})),this._formElement.addEventListener("submit",(function(t){t.preventDefault()}))}},{key:"_checkValidity",value:function(t){t.validity.valid?this.hideErrorMessage(t):this._showErrorMessage(t)}},{key:"_showErrorMessage",value:function(t){t.classList.add(this._inputErrorClass);var e=this._formElement.querySelector(".".concat(t.id,"-error"));e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"hideErrorMessage",value:function(t){t.classList.remove(this._inputErrorClass);var e=this._formElement.querySelector(".".concat(t.id,"-error"));e.classList.remove(this._errorClass),e.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_disableButton",value:function(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}},{key:"_enableButton",value:function(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disableButton():this._enableButton()}},{key:"resetValidation",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){t.hideErrorMessage(e)}))}},{key:"enableValidation",value:function(){this._disableButton(),this._setEventListeners()}}])&&i(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();const a={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_visible"};function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==c(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===c(o)?o:String(o)),n)}var o}var s=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=n,this._container=document.querySelector(r),this._renderer=o}var e,r;return e=t,(r=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItems",value:function(){var t=this;this._renderedItems.forEach((function(e){t._renderer(e)}))}}])&&l(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===f(o)?o:String(o)),n)}var o}var y=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupSelector=e,this._popup=document.querySelector(this._popupSelector),this._handleEscClose=this._handleEscClose.bind(this)}var e,r;return e=t,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target.classList.contains("popup_opened")&&t.close(),e.target.classList.contains("popup__close-button")&&t.close()}))}}])&&p(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function h(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===d(o)?o:String(o)),n)}var o}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=b(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},m.apply(this,arguments)}function v(t,e){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},v(t,e)}function b(t){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},b(t)}var _=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&v(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=b(n);if(o){var r=b(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e,r=t.popupSelector,n=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,r))._formElement=e._popup.querySelector(".form"),e._formSubmitButton=e._formElement.querySelector(".popup__submit-button"),e._submitButtonText=e._formSubmitButton.textContent,e._handleFormSubmit=n,e._inputList=e._formElement.querySelectorAll(".form__input"),e}return e=u,(r=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setInputValues",value:function(t){this._inputList.forEach((function(e){e.value=t[e.name]}))}},{key:"close",value:function(){m(b(u.prototype),"close",this).call(this),this._formElement.reset()}},{key:"renderLoading",value:function(t){this._formSubmitButton.textContent=t?"Сохранение...":this._submitButtonText}},{key:"setEventListeners",value:function(){var t=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault(),t.renderLoading(!0),t._handleFormSubmit(t._getInputValues()),t.close()})),m(b(u.prototype),"setEventListeners",this).call(this)}}])&&h(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(y);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function S(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}var k=function(){function t(e){var r=e.nameElementSelector,n=e.jobElementSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(r),this._jobElement=document.querySelector(n)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return this._userInfo={username:this._nameElement.textContent,"user-info":this._jobElement.textContent},this._userInfo}},{key:"setUserInfo",value:function(t){this._nameElement.textContent=t.name,this._jobElement.textContent=t.about}}])&&S(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function w(t){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},w(t)}function E(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==w(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===w(o)?o:String(o)),n)}var o}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},C.apply(this,arguments)}function P(t,e){return P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},P(t,e)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var L=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&P(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=j(n);if(o){var r=j(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===w(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._popupCardImage=e._popup.querySelector(".popup__image"),e._popupImageCaption=e._popup.querySelector(".popup__image-caption"),e}return e=u,(r=[{key:"open",value:function(t){this._popupCardImage.src=t.link,this._popupCardImage.alt=t.name,this._popupImageCaption.textContent=t.name,C(j(u.prototype),"open",this).call(this)}}])&&E(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(y),O=document.querySelector(".profile__edit-button"),I=document.querySelector(".profile__add-button"),B=document.querySelector(".profile__avatar-button"),R=document.querySelector(".profile__avatar"),T=document.querySelector(".profile__name"),q=document.querySelector(".profile__about-yourself");function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function U(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==x(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===x(o)?o:String(o)),n)}var o}var D=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){var t=fetch("".concat(this._baseUrl,"/users/me"),{headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(t)}},{key:"getInitialCards",value:function(){var t=fetch("".concat(this._baseUrl,"/cards"),{headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(t)}},{key:"_returnPromiseResult",value:function(t){return t.then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"renderInitialData",value:function(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}},{key:"editUserInfo",value:function(t){var e=fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.username,about:t["user-info"]})});return this._returnPromiseResult(e)}},{key:"addNewCard",value:function(t){var e=fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})});return this._returnPromiseResult(e)}},{key:"deleteCard",value:function(t){var e=fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(e)}},{key:"likeCard",value:function(t){var e=fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(e)}},{key:"deleteLike",value:function(t){var e=fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:{authorization:this._headers.authorization}});return this._returnPromiseResult(e)}},{key:"changeAvatar",value:function(t){var e=fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})});return this._returnPromiseResult(e)}}])&&U(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function A(t){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},A(t)}function V(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==A(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===A(o)?o:String(o)),n)}var o}function z(){return z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=M(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},z.apply(this,arguments)}function F(t,e){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},F(t,e)}function M(t){return M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},M(t)}var N=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&F(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=M(n);if(o){var r=M(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===A(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r,n=e.removeCardItem;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._confirmButton=r._popup.querySelector(".popup__submit-button"),r._removeCardItem=n,r}return e=u,(r=[{key:"setEventListeners",value:function(){var t=this;this._confirmButton.addEventListener("click",(function(){t._removeCardItem(t._classCopy,t._cardId),z(M(u.prototype),"close",t).call(t)})),z(M(u.prototype),"setEventListeners",this).call(this)}},{key:"open",value:function(t,e){z(M(u.prototype),"open",this).call(this),this._classCopy=t,this._cardId=e}}])&&V(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(y);function J(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var H=new D({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-66",headers:{authorization:"7465e869-899f-4ef6-ae51-f5f41eae39be","Content-Type":"application/json"}});H.renderInitialData().then((function(t){var e,r,o=(r=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var r=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=r){var n,o,i,u,a=[],c=!0,l=!1;try{if(i=(r=r.call(t)).next,0===e){if(Object(r)!==r)return;c=!1}else for(;!(c=(n=i.call(r)).done)&&(a.push(n.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,r)||function(t,e){if(t){if("string"==typeof t)return J(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?J(t,e):void 0}}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];T.textContent=i.name,q.textContent=i.about,R.src=i.avatar;var c=new L(".popup_type_upscaling"),l=new N(".popup_type_delete-card",{removeCardItem:function(t,e){H.deleteCard(e).then((function(){t.deleteCard()})).catch((function(t){return console.error(t)}))}}),f=function(t){var e=new n({data:{item:t,userId:i._id,ownerId:t.owner._id},handleCardClick:function(){c.open(t)},handleDeleteIconClick:function(t,e){l.open(t,e)},handleLikeCard:function(r){e.isLiked(t.likes)?H.deleteLike(r).then((function(r){return e.deactivateLikeButton(),e.changeLikeCounter(r.likes),t=r})).catch((function(t){return console.error(t)})):H.likeCard(r).then((function(r){return e.activateLikeButton(),e.changeLikeCounter(r.likes),t=r})).catch((function(t){return console.error(t)}))}},"#card-template");return e.generateCard()},p=new s({items:a,renderer:function(t){var e=f(t);p.addItem(e)}},".cards__list"),y=new k({nameElementSelector:".profile__name",jobElementSelector:".profile__about-yourself"}),d=new _({popupSelector:".popup_type_edit-profile",handleFormSubmit:function(t){H.editUserInfo(t).then((function(t){y.setUserInfo(t)})).catch((function(t){return console.error(t)})).finally((function(){d.renderLoading(!1)}))}}),h=new _({popupSelector:".popup_type_add-card",handleFormSubmit:function(t){H.addNewCard(t).then((function(t){var e=f(t);p.addItem(e)})).catch((function(t){return console.error(t)})).finally((function(){h.renderLoading(!1)}))}}),m=new _({popupSelector:".popup_type_change-avatar",handleFormSubmit:function(t){H.changeAvatar(t.avatar).then((function(t){R.src=t.avatar})).catch((function(t){return console.error(t)})).finally((function(){m.renderLoading(!1)}))}}),v={};return{userInfo:y,editProfilePopup:d,addCardPopup:h,cardsList:p,upscalingCardImagePopup:c,deleteCardPopup:l,changeAvatarPopup:m,enableValidation:function(t){Array.from(document.querySelectorAll(t.formSelector)).forEach((function(e){var r=new u(t,e),n=e.getAttribute("name");v[n]=r,r.enableValidation()}))},formValidators:v}})).then((function(t){var e=t.userInfo,r=t.editProfilePopup,n=t.addCardPopup,o=t.cardsList,i=t.upscalingCardImagePopup,u=t.deleteCardPopup,c=t.changeAvatarPopup,l=t.enableValidation,s=t.formValidators;o.renderItems(),n.setEventListeners(),r.setEventListeners(),i.setEventListeners(),u.setEventListeners(),c.setEventListeners(),l(a),I.addEventListener("click",(function(){s.addCardForm.resetValidation(),n.open()})),O.addEventListener("click",(function(){var t=e.getUserInfo();r.setInputValues(t),s.editProfileForm.resetValidation(),r.open()})),B.addEventListener("click",(function(){s.changeAvatarForm.resetValidation(),c.open()}))})).catch((function(t){return console.error(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WixHQUNGLEVBV0VELGVBQUFBLEVBRUosSUFDQzNELE1BQUssU0FBQ3pKLEdBQ0wsSUFDRTBNLEVBU0UxTSxFQVRGME0sU0FDQUMsRUFRRTNNLEVBUkYyTSxpQkFDQUssRUFPRWhOLEVBUEZnTixhQUNBVixFQU1FdE0sRUFORnNNLFVBQ0FkLEVBS0V4TCxFQUxGd0wsd0JBQ0FDLEVBSUV6TCxFQUpGeUwsZ0JBQ0F5QixFQUdFbE4sRUFIRmtOLGtCQUNBRyxFQUVFck4sRUFGRnFOLGlCQUNBRCxFQUNFcE4sRUFERm9OLGVBR0ZkLEVBQVVxQixjQUNWWCxFQUFhWSxvQkFDYmpCLEVBQWlCaUIsb0JBQ2pCcEMsRUFBd0JvQyxvQkFDeEJuQyxFQUFnQm1DLG9CQUNoQlYsRUFBa0JVLG9CQUNsQlAsRUFBaUJRLEdBRWpCbkYsRUFBaUI5RixpQkFBaUIsU0FBUyxXQUN6Q3dLLEVBQTRCLFlBQUVVLGtCQUU5QmQsRUFBYWQsTUFDZixJQUVBekQsRUFBa0I3RixpQkFBaUIsU0FBUyxXQUMxQyxJQUFNbUwsRUFBY3JCLEVBQVN6QyxjQUM3QjBDLEVBQWlCcUIsZUFBZUQsR0FFaENYLEVBQWdDLGdCQUFFVSxrQkFFbENuQixFQUFpQlQsTUFDbkIsSUFFQXZELEVBQTBCL0YsaUJBQWlCLFNBQVMsV0FDbER3SyxFQUFpQyxpQkFBRVUsa0JBRW5DWixFQUFrQmhCLE1BQ3BCLEdBQ0YsSUFDQ1AsT0FBTSxTQUFDQyxHQUFHLE9BQUtDLFFBQVFDLE1BQU1GLEVBQUksRyIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvdXRpbHMvdmFsaWRhdGVTZXR0aW5ncy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgeyBkYXRhLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZURlbGV0ZUljb25DbGljaywgaGFuZGxlTGlrZUNhcmQgfSxcbiAgICB0ZW1wbGF0ZVNlbGVjdG9yXG4gICkge1xuICAgIHRoaXMuX2l0ZW0gPSBkYXRhLml0ZW07XG4gICAgdGhpcy5fbmFtZSA9IHRoaXMuX2l0ZW0ubmFtZTtcbiAgICB0aGlzLl9saW5rID0gdGhpcy5faXRlbS5saW5rO1xuICAgIHRoaXMuX2xpa2VzID0gdGhpcy5faXRlbS5saWtlcztcbiAgICB0aGlzLl91c2VySWQgPSBkYXRhLnVzZXJJZDtcbiAgICB0aGlzLl9vd25lcklkID0gZGF0YS5vd25lcklkO1xuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSB0ZW1wbGF0ZVNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVJY29uQ2xpY2sgPSBoYW5kbGVEZWxldGVJY29uQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlTGlrZUNhcmQgPSBoYW5kbGVMaWtlQ2FyZDtcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZCcpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIGNhcmQ7XG4gIH1cblxuICBhY3RpdmF0ZUxpa2VCdXR0b24oKSB7XG4gICAgdGhpcy5fY2FyZExpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlJyk7XG4gIH1cblxuICBkZWFjdGl2YXRlTGlrZUJ1dHRvbigpIHtcbiAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmUnKTtcbiAgfVxuXG4gIGNoYW5nZUxpa2VDb3VudGVyKGxpa2VzQXJyKSB7XG4gICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSBsaWtlc0Fyci5sZW5ndGg7XG4gIH1cblxuICBpc0xpa2VkKGxpa2VzQXJyKSB7XG4gICAgY29uc3QgbXlMaWtlID0gbGlrZXNBcnIuZmluZCgobGlrZSkgPT4ge1xuICAgICAgcmV0dXJuIGxpa2UuX2lkID09PSB0aGlzLl91c2VySWQ7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbXlMaWtlO1xuICB9XG5cbiAgZGVsZXRlQ2FyZCA9ICgpID0+IHtcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xuICB9O1xuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtYnV0dG9uJyk7XG4gICAgdGhpcy5fY2FyZERlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICcuY2FyZF9fZGVsZXRlLWJ1dHRvbidcbiAgICApO1xuICAgIHRoaXMuX2NhcmRJbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2ltYWdlJyk7XG5cbiAgICB0aGlzLl9jYXJkTGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQ2FyZCh0aGlzLl9pdGVtLl9pZClcbiAgICApO1xuICAgIHRoaXMuX2NhcmREZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PlxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlSWNvbkNsaWNrKHRoaXMsIHRoaXMuX2l0ZW0uX2lkKVxuICAgICk7XG4gICAgdGhpcy5fY2FyZEltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5faGFuZGxlQ2FyZENsaWNrLmJpbmQodGhpcykpO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX2xpa2VDb3VudGVyID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1jb3VudGVyJyk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLmNoYW5nZUxpa2VDb3VudGVyKHRoaXMuX2xpa2VzKTtcblxuICAgIGlmICh0aGlzLmlzTGlrZWQodGhpcy5fbGlrZXMpKSB7XG4gICAgICB0aGlzLmFjdGl2YXRlTGlrZUJ1dHRvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRlYWN0aXZhdGVMaWtlQnV0dG9uKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX293bmVySWQgIT09IHRoaXMuX3VzZXJJZCkge1xuICAgICAgdGhpcy5fY2FyZERlbGV0ZUJ1dHRvbi5yZW1vdmUoKTtcbiAgICAgIHRoaXMuX2NhcmREZWxldGVCdXR0b24gPSBudWxsO1xuICAgIH1cblxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fdGl0bGUnKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHZhbGlkYXRlU2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxuICAgICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh2YWxpZGF0ZVNldHRpbmdzLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSB2YWxpZGF0ZVNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gdmFsaWRhdGVTZXR0aW5ncy5lcnJvckNsYXNzO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB2YWxpZGF0ZVNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yXG4gICAgKTtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gdmFsaWRhdGVTZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrVmFsaWRpdHkoaW5wdXQpO1xuXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jaGVja1ZhbGlkaXR5KGlucHV0KSB7XG4gICAgaWYgKCFpbnB1dC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fc2hvd0Vycm9yTWVzc2FnZShpbnB1dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaGlkZUVycm9yTWVzc2FnZShpbnB1dCk7XG4gICAgfVxuICB9XG5cbiAgX3Nob3dFcnJvck1lc3NhZ2UoaW5wdXQpIHtcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG5cbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBlcnJvck1lc3NhZ2UudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcbiAgICBlcnJvck1lc3NhZ2UuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfVxuXG4gIGhpZGVFcnJvck1lc3NhZ2UoaW5wdXQpIHtcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG5cbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBlcnJvck1lc3NhZ2UuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBlcnJvck1lc3NhZ2UudGV4dENvbnRlbnQgPSAnJztcbiAgfVxuXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfVxuXG4gIF9kaXNhYmxlQnV0dG9uKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gIH1cblxuICBfZW5hYmxlQnV0dG9uKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICB9XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5fZGlzYWJsZUJ1dHRvbigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9lbmFibGVCdXR0b24oKTtcbiAgICB9XG4gIH1cblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcblxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5oaWRlRXJyb3JNZXNzYWdlKGlucHV0KTtcbiAgICB9KTtcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fZGlzYWJsZUJ1dHRvbigpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImNvbnN0IHZhbGlkYXRlU2V0dGluZ3NPYmogPSB7XG4gIGZvcm1TZWxlY3RvcjogJy5mb3JtJyxcbiAgaW5wdXRTZWxlY3RvcjogJy5mb3JtX19pbnB1dCcsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19zdWJtaXQtYnV0dG9uJyxcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19zdWJtaXQtYnV0dG9uX2Rpc2FibGVkJyxcbiAgaW5wdXRFcnJvckNsYXNzOiAnZm9ybV9faW5wdXRfdHlwZV9lcnJvcicsXG4gIGVycm9yQ2xhc3M6ICdmb3JtX19pbnB1dC1lcnJvcl92aXNpYmxlJyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlU2V0dGluZ3NPYmo7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG5cbiAgcmVuZGVySXRlbXMoKSB7XG4gICAgdGhpcy5fcmVuZGVyZWRJdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXBTZWxlY3RvciA9IHBvcHVwU2VsZWN0b3I7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3BvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX29wZW5lZCcpKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX19jbG9zZS1idXR0b24nKSkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0IH0pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XG4gICAgdGhpcy5fZm9ybVN1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAnLnBvcHVwX19zdWJtaXQtYnV0dG9uJ1xuICAgICk7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uVGV4dCA9IHRoaXMuX2Zvcm1TdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZvcm1fX2lucHV0Jyk7XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5fZm9ybVZhbHVlcyA9IHt9O1xuXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB0aGlzLl9mb3JtVmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5fZm9ybVZhbHVlcztcbiAgfVxuXG4gIHNldElucHV0VmFsdWVzKGRhdGEpIHtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LnZhbHVlID0gZGF0YVtpbnB1dC5uYW1lXTtcbiAgICB9KTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7XG5cbiAgICB0aGlzLl9mb3JtRWxlbWVudC5yZXNldCgpO1xuICB9XG5cbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcpIHtcbiAgICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgICB0aGlzLl9mb3JtU3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZm9ybVN1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IHRoaXMuX3N1Ym1pdEJ1dHRvblRleHQ7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5yZW5kZXJMb2FkaW5nKHRydWUpO1xuXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuXG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSk7XG5cbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZUVsZW1lbnRTZWxlY3Rvciwgam9iRWxlbWVudFNlbGVjdG9yIH0pIHtcbiAgICB0aGlzLl9uYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZUVsZW1lbnRTZWxlY3Rvcik7XG4gICAgdGhpcy5fam9iRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iRWxlbWVudFNlbGVjdG9yKTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHRoaXMuX3VzZXJJbmZvID0ge1xuICAgICAgdXNlcm5hbWU6IHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50LFxuICAgICAgJ3VzZXItaW5mbyc6IHRoaXMuX2pvYkVsZW1lbnQudGV4dENvbnRlbnQsXG4gICAgfTtcblxuICAgIHJldHVybiB0aGlzLl91c2VySW5mbztcbiAgfVxuXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcbiAgICB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9qb2JFbGVtZW50LnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX3BvcHVwQ2FyZEltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xuICAgIHRoaXMuX3BvcHVwSW1hZ2VDYXB0aW9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcbiAgICAgICcucG9wdXBfX2ltYWdlLWNhcHRpb24nXG4gICAgKTtcbiAgfVxuXG4gIG9wZW4oZGF0YSkge1xuICAgIHRoaXMuX3BvcHVwQ2FyZEltYWdlLnNyYyA9IGRhdGEubGluaztcbiAgICB0aGlzLl9wb3B1cENhcmRJbWFnZS5hbHQgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fcG9wdXBJbWFnZUNhcHRpb24udGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG5cbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cbiIsIi8vINC60L3QvtC/0LrQuCDQvdCwINCz0LvQsNCy0L3QvtC5INGB0YLRgNCw0L3QuNGG0LUgKNC+0YLQutGA0YvRgtC40Y8g0L/QvtC/0LDQv9C+0LIpXG5leHBvcnQgY29uc3QgZWRpdEJ1dHRvbkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAnLnByb2ZpbGVfX2VkaXQtYnV0dG9uJ1xuKTtcbmV4cG9ydCBjb25zdCBhZGRCdXR0b25FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcbmV4cG9ydCBjb25zdCBjaGFuZ2VBdmF0YXJCdXR0b25FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgJy5wcm9maWxlX19hdmF0YXItYnV0dG9uJ1xuKTtcblxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyJyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fbmFtZScpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBYm91dFlvdXJzZWxmID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgJy5wcm9maWxlX19hYm91dC15b3Vyc2VsZidcbik7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IG9wdGlvbnMuYmFzZVVybDtcbiAgICB0aGlzLl9oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgY29uc3QgcHJvbWlzZSA9IGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9oZWFkZXJzLmF1dGhvcml6YXRpb24sXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMuX3JldHVyblByb21pc2VSZXN1bHQocHJvbWlzZSk7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgY29uc3QgcHJvbWlzZSA9IGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9oZWFkZXJzLmF1dGhvcml6YXRpb24sXG4gICAgICB9LFxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl9yZXR1cm5Qcm9taXNlUmVzdWx0KHByb21pc2UpO1xuICB9XG5cbiAgX3JldHVyblByb21pc2VSZXN1bHQocHJvbWlzZSkge1xuICAgIHJldHVybiBwcm9taXNlLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgIH0pO1xuICB9XG5cbiAgcmVuZGVySW5pdGlhbERhdGEoKSB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldFVzZXJJbmZvKCksIHRoaXMuZ2V0SW5pdGlhbENhcmRzKCldKTtcbiAgfVxuXG4gIGVkaXRVc2VySW5mbyhmb3JtSW5wdXRWYWx1ZXMpIHtcbiAgICBjb25zdCBwcm9taXNlID0gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lOiBmb3JtSW5wdXRWYWx1ZXMudXNlcm5hbWUsXG4gICAgICAgIGFib3V0OiBmb3JtSW5wdXRWYWx1ZXNbJ3VzZXItaW5mbyddLFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5fcmV0dXJuUHJvbWlzZVJlc3VsdChwcm9taXNlKTtcbiAgfVxuXG4gIGFkZE5ld0NhcmQoZm9ybUlucHV0VmFsdWVzKSB7XG4gICAgY29uc3QgcHJvbWlzZSA9IGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lOiBmb3JtSW5wdXRWYWx1ZXMubmFtZSxcbiAgICAgICAgbGluazogZm9ybUlucHV0VmFsdWVzLmxpbmssXG4gICAgICB9KSxcbiAgICB9KTtcblxuICAgIHJldHVybiB0aGlzLl9yZXR1cm5Qcm9taXNlUmVzdWx0KHByb21pc2UpO1xuICB9XG5cbiAgZGVsZXRlQ2FyZChpZCkge1xuICAgIGNvbnN0IHByb21pc2UgPSBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2hlYWRlcnMuYXV0aG9yaXphdGlvbixcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5fcmV0dXJuUHJvbWlzZVJlc3VsdChwcm9taXNlKTtcbiAgfVxuXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xuICAgIGNvbnN0IHByb21pc2UgPSBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9oZWFkZXJzLmF1dGhvcml6YXRpb24sXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMuX3JldHVyblByb21pc2VSZXN1bHQocHJvbWlzZSk7XG4gIH1cblxuICBkZWxldGVMaWtlKGNhcmRJZCkge1xuICAgIGNvbnN0IHByb21pc2UgPSBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9oZWFkZXJzLmF1dGhvcml6YXRpb24sXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMuX3JldHVyblByb21pc2VSZXN1bHQocHJvbWlzZSk7XG4gIH1cblxuICBjaGFuZ2VBdmF0YXIodXJsKSB7XG4gICAgY29uc3QgcHJvbWlzZSA9IGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcjogdXJsLFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5fcmV0dXJuUHJvbWlzZVJlc3VsdChwcm9taXNlKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIHsgcmVtb3ZlQ2FyZEl0ZW0gfSkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2NvbmZpcm1CdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3N1Ym1pdC1idXR0b24nKTtcbiAgICB0aGlzLl9yZW1vdmVDYXJkSXRlbSA9IHJlbW92ZUNhcmRJdGVtO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fY29uZmlybUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX3JlbW92ZUNhcmRJdGVtKHRoaXMuX2NsYXNzQ29weSwgdGhpcy5fY2FyZElkKTtcblxuICAgICAgc3VwZXIuY2xvc2UoKTtcbiAgICB9KTtcblxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBvcGVuKGNsYXNzQ29weSwgY2FyZElkKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX2NsYXNzQ29weSA9IGNsYXNzQ29weTtcbiAgICB0aGlzLl9jYXJkSWQgPSBjYXJkSWQ7XG4gIH1cbn1cbiIsImltcG9ydCAnLi9pbmRleC5jc3MnO1xuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XG5pbXBvcnQgdmFsaWRhdGVTZXR0aW5nc09iaiBmcm9tICcuLi91dGlscy92YWxpZGF0ZVNldHRpbmdzLmpzJztcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8uanMnO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xuaW1wb3J0IHtcbiAgZWRpdEJ1dHRvbkVsZW1lbnQsXG4gIGFkZEJ1dHRvbkVsZW1lbnQsXG4gIHByb2ZpbGVOYW1lLFxuICBwcm9maWxlQWJvdXRZb3Vyc2VsZixcbiAgcHJvZmlsZUF2YXRhcixcbiAgY2hhbmdlQXZhdGFyQnV0dG9uRWxlbWVudCxcbn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcbmltcG9ydCBBcGkgZnJvbSAnLi4vY29tcG9uZW50cy9BcGkuanMnO1xuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbic7XG5cblxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6ICdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTY2JyxcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246ICc3NDY1ZTg2OS04OTlmLTRlZjYtYWU1MS1mNWY0MWVhZTM5YmUnLFxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gIH0sXG59KTtcblxuYXBpLnJlbmRlckluaXRpYWxEYXRhKClcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgIGNvbnN0IFtpbml0aWFsVXNlckluZm8sIGluaXRpYWxDYXJkc10gPSByZXN1bHQ7XG5cbiAgICBwcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IGluaXRpYWxVc2VySW5mby5uYW1lO1xuICAgIHByb2ZpbGVBYm91dFlvdXJzZWxmLnRleHRDb250ZW50ID0gaW5pdGlhbFVzZXJJbmZvLmFib3V0O1xuICAgIHByb2ZpbGVBdmF0YXIuc3JjID0gaW5pdGlhbFVzZXJJbmZvLmF2YXRhcjtcblxuICAgIGNvbnN0IHVwc2NhbGluZ0NhcmRJbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKCcucG9wdXBfdHlwZV91cHNjYWxpbmcnKTtcblxuICAgIGNvbnN0IGRlbGV0ZUNhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oXG4gICAgICAnLnBvcHVwX3R5cGVfZGVsZXRlLWNhcmQnLFxuICAgICAge1xuICAgICAgICByZW1vdmVDYXJkSXRlbTogKGNsYXNzQ29weSwgY2FyZElkKSA9PiB7XG4gICAgICAgICAgYXBpLmRlbGV0ZUNhcmQoY2FyZElkKVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICBjbGFzc0NvcHkuZGVsZXRlQ2FyZCgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpO1xuICAgICAgICB9LFxuICAgICAgfVxuICAgICk7XG5cbiAgICBjb25zdCBjcmVhdGVDYXJkID0gKGl0ZW0pID0+IHtcbiAgICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICAgICAge1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGl0ZW0sXG4gICAgICAgICAgICB1c2VySWQ6IGluaXRpYWxVc2VySW5mby5faWQsXG4gICAgICAgICAgICBvd25lcklkOiBpdGVtLm93bmVyLl9pZCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGhhbmRsZUNhcmRDbGljazogKCkgPT4ge1xuICAgICAgICAgICAgdXBzY2FsaW5nQ2FyZEltYWdlUG9wdXAub3BlbihpdGVtKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGhhbmRsZURlbGV0ZUljb25DbGljazogKGNsYXNzQ29weSwgY2FyZElkKSA9PiB7XG4gICAgICAgICAgICBkZWxldGVDYXJkUG9wdXAub3BlbihjbGFzc0NvcHksIGNhcmRJZCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBoYW5kbGVMaWtlQ2FyZDogKGNhcmRJZCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaXNMaWtlZCA9IGNhcmQuaXNMaWtlZChpdGVtLmxpa2VzKTtcblxuICAgICAgICAgICAgaWYgKGlzTGlrZWQpIHtcbiAgICAgICAgICAgICAgYXBpLmRlbGV0ZUxpa2UoY2FyZElkKVxuICAgICAgICAgICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNhcmQuZGVhY3RpdmF0ZUxpa2VCdXR0b24oKTtcbiAgICAgICAgICAgICAgICAgIGNhcmQuY2hhbmdlTGlrZUNvdW50ZXIocmVzdWx0Lmxpa2VzKTtcbiAgICAgICAgICAgICAgICAgIGl0ZW0gPSByZXN1bHQ7XG5cbiAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBhcGkubGlrZUNhcmQoY2FyZElkKVxuICAgICAgICAgICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNhcmQuYWN0aXZhdGVMaWtlQnV0dG9uKCk7XG4gICAgICAgICAgICAgICAgICBjYXJkLmNoYW5nZUxpa2VDb3VudGVyKHJlc3VsdC5saWtlcyk7XG4gICAgICAgICAgICAgICAgICBpdGVtID0gcmVzdWx0O1xuXG4gICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgICcjY2FyZC10ZW1wbGF0ZSdcbiAgICAgICk7XG5cbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbiAgICAgIHJldHVybiBjYXJkRWxlbWVudDtcbiAgICB9O1xuXG4gICAgY29uc3QgY2FyZHNMaXN0ID0gbmV3IFNlY3Rpb24oXG4gICAgICB7XG4gICAgICAgIGl0ZW1zOiBpbml0aWFsQ2FyZHMsXG4gICAgICAgIHJlbmRlcmVyOiAoY2FyZEl0ZW0pID0+IHtcbiAgICAgICAgICBjb25zdCBjYXJkRWxlbWVudCA9IGNyZWF0ZUNhcmQoY2FyZEl0ZW0pO1xuXG4gICAgICAgICAgY2FyZHNMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgICcuY2FyZHNfX2xpc3QnXG4gICAgKTtcblxuICAgIGNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgICAgIG5hbWVFbGVtZW50U2VsZWN0b3I6ICcucHJvZmlsZV9fbmFtZScsXG4gICAgICBqb2JFbGVtZW50U2VsZWN0b3I6ICcucHJvZmlsZV9fYWJvdXQteW91cnNlbGYnLFxuICAgIH0pO1xuXG4gICAgY29uc3QgZWRpdFByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgICAgIHBvcHVwU2VsZWN0b3I6ICcucG9wdXBfdHlwZV9lZGl0LXByb2ZpbGUnLFxuICAgICAgaGFuZGxlRm9ybVN1Ym1pdDogKGZvcm1EYXRhKSA9PiB7XG4gICAgICAgIGFwaS5lZGl0VXNlckluZm8oZm9ybURhdGEpXG4gICAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzdWx0KTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVycikpXG4gICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgICAgZWRpdFByb2ZpbGVQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBhZGRDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gICAgICBwb3B1cFNlbGVjdG9yOiAnLnBvcHVwX3R5cGVfYWRkLWNhcmQnLFxuICAgICAgaGFuZGxlRm9ybVN1Ym1pdDogKGZvcm1EYXRhKSA9PiB7XG4gICAgICAgIGFwaS5hZGROZXdDYXJkKGZvcm1EYXRhKVxuICAgICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChyZXN1bHQpO1xuICAgICAgICAgICAgY2FyZHNMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcbiAgICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBhZGRDYXJkUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gICAgICAgICAgfSk7XG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgY29uc3QgY2hhbmdlQXZhdGFyUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gICAgICBwb3B1cFNlbGVjdG9yOiAnLnBvcHVwX3R5cGVfY2hhbmdlLWF2YXRhcicsXG4gICAgICBoYW5kbGVGb3JtU3VibWl0OiAoZm9ybURhdGEpID0+IHtcbiAgICAgICAgYXBpLmNoYW5nZUF2YXRhcihmb3JtRGF0YS5hdmF0YXIpXG4gICAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgcHJvZmlsZUF2YXRhci5zcmMgPSByZXN1bHQuYXZhdGFyO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcbiAgICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBjaGFuZ2VBdmF0YXJQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyDQstC60LvRjtGH0LXQvdC40LUg0LLQsNC70LjQtNCw0YbQuNC4INGE0L7RgNC8XG4gICAgY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcblxuICAgIGNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAoY29uZmlnKSA9PiB7XG4gICAgICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3RvcilcbiAgICAgICk7XG4gICAgICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgZm9ybSk7XG5cbiAgICAgICAgY29uc3QgZm9ybU5hbWUgPSBmb3JtLmdldEF0dHJpYnV0ZSgnbmFtZScpO1xuXG4gICAgICAgIGZvcm1WYWxpZGF0b3JzW2Zvcm1OYW1lXSA9IHZhbGlkYXRvcjtcbiAgICAgICAgdmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4ge1xuICAgICAgdXNlckluZm8sXG4gICAgICBlZGl0UHJvZmlsZVBvcHVwLFxuICAgICAgYWRkQ2FyZFBvcHVwLFxuICAgICAgY2FyZHNMaXN0LFxuICAgICAgdXBzY2FsaW5nQ2FyZEltYWdlUG9wdXAsXG4gICAgICBkZWxldGVDYXJkUG9wdXAsXG4gICAgICBjaGFuZ2VBdmF0YXJQb3B1cCxcbiAgICAgIGVuYWJsZVZhbGlkYXRpb24sXG4gICAgICBmb3JtVmFsaWRhdG9ycyxcbiAgICB9O1xuICB9KVxuICAudGhlbigoZGF0YSkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHVzZXJJbmZvLFxuICAgICAgZWRpdFByb2ZpbGVQb3B1cCxcbiAgICAgIGFkZENhcmRQb3B1cCxcbiAgICAgIGNhcmRzTGlzdCxcbiAgICAgIHVwc2NhbGluZ0NhcmRJbWFnZVBvcHVwLFxuICAgICAgZGVsZXRlQ2FyZFBvcHVwLFxuICAgICAgY2hhbmdlQXZhdGFyUG9wdXAsXG4gICAgICBlbmFibGVWYWxpZGF0aW9uLFxuICAgICAgZm9ybVZhbGlkYXRvcnMsXG4gICAgfSA9IGRhdGE7XG5cbiAgICBjYXJkc0xpc3QucmVuZGVySXRlbXMoKTtcbiAgICBhZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICBlZGl0UHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdXBzY2FsaW5nQ2FyZEltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICBkZWxldGVDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICBjaGFuZ2VBdmF0YXJQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuICAgIGVuYWJsZVZhbGlkYXRpb24odmFsaWRhdGVTZXR0aW5nc09iaik7XG5cbiAgICBhZGRCdXR0b25FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgZm9ybVZhbGlkYXRvcnNbJ2FkZENhcmRGb3JtJ10ucmVzZXRWYWxpZGF0aW9uKCk7XG5cbiAgICAgIGFkZENhcmRQb3B1cC5vcGVuKCk7XG4gICAgfSk7XG5cbiAgICBlZGl0QnV0dG9uRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IHVzZXJJbmZvT2JqID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcbiAgICAgIGVkaXRQcm9maWxlUG9wdXAuc2V0SW5wdXRWYWx1ZXModXNlckluZm9PYmopO1xuXG4gICAgICBmb3JtVmFsaWRhdG9yc1snZWRpdFByb2ZpbGVGb3JtJ10ucmVzZXRWYWxpZGF0aW9uKCk7XG5cbiAgICAgIGVkaXRQcm9maWxlUG9wdXAub3BlbigpO1xuICAgIH0pO1xuXG4gICAgY2hhbmdlQXZhdGFyQnV0dG9uRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGZvcm1WYWxpZGF0b3JzWydjaGFuZ2VBdmF0YXJGb3JtJ10ucmVzZXRWYWxpZGF0aW9uKCk7XG5cbiAgICAgIGNoYW5nZUF2YXRhclBvcHVwLm9wZW4oKTtcbiAgICB9KTtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4iXSwibmFtZXMiOlsiQ2FyZCIsIl9yZWYiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiX3RoaXMiLCJkYXRhIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlRGVsZXRlSWNvbkNsaWNrIiwiaGFuZGxlTGlrZUNhcmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfZWxlbWVudCIsInJlbW92ZSIsInRoaXMiLCJfaXRlbSIsIml0ZW0iLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfbGlrZXMiLCJsaWtlcyIsIl91c2VySWQiLCJ1c2VySWQiLCJfb3duZXJJZCIsIm93bmVySWQiLCJfdGVtcGxhdGVTZWxlY3RvciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlRGVsZXRlSWNvbkNsaWNrIiwiX2hhbmRsZUxpa2VDYXJkIiwia2V5IiwidmFsdWUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2NhcmRMaWtlQnV0dG9uIiwiY2xhc3NMaXN0IiwiYWRkIiwibGlrZXNBcnIiLCJfbGlrZUNvdW50ZXIiLCJ0ZXh0Q29udGVudCIsImxlbmd0aCIsIl90aGlzMiIsImZpbmQiLCJsaWtlIiwiX2lkIiwiX3RoaXMzIiwiX2NhcmREZWxldGVCdXR0b24iLCJfY2FyZEltYWdlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJpbmQiLCJfZ2V0VGVtcGxhdGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJjaGFuZ2VMaWtlQ291bnRlciIsImlzTGlrZWQiLCJhY3RpdmF0ZUxpa2VCdXR0b24iLCJkZWFjdGl2YXRlTGlrZUJ1dHRvbiIsInNyYyIsImFsdCIsIkZvcm1WYWxpZGF0b3IiLCJ2YWxpZGF0ZVNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfZm9ybUVsZW1lbnQiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX3N1Ym1pdEJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiZm9yRWFjaCIsImlucHV0IiwiX2NoZWNrVmFsaWRpdHkiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwidmFsaWRpdHkiLCJ2YWxpZCIsImhpZGVFcnJvck1lc3NhZ2UiLCJfc2hvd0Vycm9yTWVzc2FnZSIsImVycm9yTWVzc2FnZSIsImNvbmNhdCIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJzb21lIiwiZGlzYWJsZWQiLCJfaGFzSW52YWxpZElucHV0IiwiX2Rpc2FibGVCdXR0b24iLCJfZW5hYmxlQnV0dG9uIiwiZm9ybVNlbGVjdG9yIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlZEl0ZW1zIiwiX2NvbnRhaW5lciIsIl9yZW5kZXJlciIsImVsZW1lbnQiLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwU2VsZWN0b3IiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2xvc2UiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJfUG9wdXAiLCJfaW5oZXJpdHMiLCJfc3VwZXIiLCJoYW5kbGVGb3JtU3VibWl0IiwiY2FsbCIsIl9mb3JtU3VibWl0QnV0dG9uIiwiX3N1Ym1pdEJ1dHRvblRleHQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9mb3JtVmFsdWVzIiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsInJlc2V0IiwiaXNMb2FkaW5nIiwicmVuZGVyTG9hZGluZyIsIl9nZXRJbnB1dFZhbHVlcyIsIlVzZXJJbmZvIiwibmFtZUVsZW1lbnRTZWxlY3RvciIsImpvYkVsZW1lbnRTZWxlY3RvciIsIl9uYW1lRWxlbWVudCIsIl9qb2JFbGVtZW50IiwiX3VzZXJJbmZvIiwidXNlcm5hbWUiLCJhYm91dCIsIlBvcHVwV2l0aEltYWdlIiwiX3BvcHVwQ2FyZEltYWdlIiwiX3BvcHVwSW1hZ2VDYXB0aW9uIiwiZWRpdEJ1dHRvbkVsZW1lbnQiLCJhZGRCdXR0b25FbGVtZW50IiwiY2hhbmdlQXZhdGFyQnV0dG9uRWxlbWVudCIsInByb2ZpbGVBdmF0YXIiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVBYm91dFlvdXJzZWxmIiwiQXBpIiwib3B0aW9ucyIsIl9iYXNlVXJsIiwiYmFzZVVybCIsIl9oZWFkZXJzIiwiaGVhZGVycyIsInByb21pc2UiLCJmZXRjaCIsImF1dGhvcml6YXRpb24iLCJfcmV0dXJuUHJvbWlzZVJlc3VsdCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiYWxsIiwiZ2V0VXNlckluZm8iLCJnZXRJbml0aWFsQ2FyZHMiLCJmb3JtSW5wdXRWYWx1ZXMiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsInVybCIsImF2YXRhciIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsInJlbW92ZUNhcmRJdGVtIiwiX2NvbmZpcm1CdXR0b24iLCJfcmVtb3ZlQ2FyZEl0ZW0iLCJfY2xhc3NDb3B5IiwiX2NhcmRJZCIsImNsYXNzQ29weSIsImFwaSIsInJlbmRlckluaXRpYWxEYXRhIiwicmVzdWx0IiwiX3Jlc3VsdCIsImluaXRpYWxVc2VySW5mbyIsImluaXRpYWxDYXJkcyIsInVwc2NhbGluZ0NhcmRJbWFnZVBvcHVwIiwiZGVsZXRlQ2FyZFBvcHVwIiwiZGVsZXRlQ2FyZCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiY3JlYXRlQ2FyZCIsImNhcmQiLCJvd25lciIsIm9wZW4iLCJkZWxldGVMaWtlIiwibGlrZUNhcmQiLCJnZW5lcmF0ZUNhcmQiLCJjYXJkc0xpc3QiLCJjYXJkSXRlbSIsImNhcmRFbGVtZW50IiwiYWRkSXRlbSIsInVzZXJJbmZvIiwiZWRpdFByb2ZpbGVQb3B1cCIsImZvcm1EYXRhIiwiZWRpdFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJmaW5hbGx5IiwiYWRkQ2FyZFBvcHVwIiwiYWRkTmV3Q2FyZCIsImNoYW5nZUF2YXRhclBvcHVwIiwiY2hhbmdlQXZhdGFyIiwiZm9ybVZhbGlkYXRvcnMiLCJlbmFibGVWYWxpZGF0aW9uIiwiY29uZmlnIiwiZm9ybSIsInZhbGlkYXRvciIsImZvcm1OYW1lIiwiZ2V0QXR0cmlidXRlIiwicmVuZGVySXRlbXMiLCJzZXRFdmVudExpc3RlbmVycyIsInZhbGlkYXRlU2V0dGluZ3NPYmoiLCJyZXNldFZhbGlkYXRpb24iLCJ1c2VySW5mb09iaiIsInNldElucHV0VmFsdWVzIl0sInNvdXJjZVJvb3QiOiIifQ==